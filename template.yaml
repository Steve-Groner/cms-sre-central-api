AWSTemplateFormatVersion: '2010-09-09'
Description: The template used to create an ECS Service from the ECS Console.
Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment type (dev or prod)
  Prefix:
    Type: String
    Default: myapp
    Description: Prefix for resource names
  ECSClusterName:
    Type: String
    Default: skypiea-data-cluster
  ContainerPort:
    Type: Number
    Default: 3001
Mappings:
  EnvironmentConfig:
    dev:
      VpcID: vpc-0d9b32420e916eb0d
      SubnetIDs: subnet-04843e4be809c3c4d,subnet-0b18920e7822d191f,subnet-053b3bb02c3bff32a
      CertificateArn: arn:aws:acm:us-east-1:473451415060:certificate/1510883b-2936-44de-8e11-62f8c1f3ec34
      GenericSecretArn: arn:aws:secretsmanager:us-east-1:473451415060:secret:rally-integration-secrets-aYipd9
      SnowflakeSecretArn: arn:aws:secretsmanager:us-east-1:473451415060:secret:/snowflake/creds-XkM4yS
      ExecutionRoleArn: arn:aws:iam::473451415060:role/acct-managed/skypiea-data-import-ecs-task-execution-role
      TaskRoleArn: arn:aws:iam::473451415060:role/acct-managed/skypiea-data-import-ecs-task-execution-role
      ImageArn: 473451415060.dkr.ecr.us-east-1.amazonaws.com/consumer-tools:cms-sre-central-api-latest
    prod:
      VpcID: vpc-0ec8bb6e8569dd71d
      SubnetIDs: subnet-002004ab51da237c5,subnet-0c4b6305d78afee10,subnet-09ede5d993c0781ea
      CertificateArn: arn:aws:acm:us-east-1:402718907337:certificate/cff2d720-0acc-4447-862c-85469df97004
      GenericSecretArn: arn:aws:secretsmanager:us-east-1:402718907337:secret:rally-integration-secrets-092Rud
      SnowflakeSecretArn: arn:aws:secretsmanager:us-east-1:402718907337:secret:/snowflake/creds-gbjO25
      ExecutionRoleArn: arn:aws:iam::402718907337:role/acct-managed/skypiea-data-import-ecs-task-execution-role
      TaskRoleArn: arn:aws:iam::402718907337:role/acct-managed/skypiea-data-import-ecs-task-execution-role
      ImageArn: 402718907337.dkr.ecr.us-east-1.amazonaws.com/consumer-tools:cms-sre-central-api-latest
Conditions:
  IsDev: !Equals [!Ref Environment, dev]
  IsProd: !Equals [!Ref Environment, prod]
Resources:
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTPS traffic
      VpcId: !FindInMap [EnvironmentConfig, !Ref Environment, VpcID]
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
  ECSServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow traffic from Load Balancer on container port
      VpcId: !FindInMap [EnvironmentConfig, !Ref Environment, VpcID]
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ContainerPort
          ToPort: !Ref ContainerPort
          SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSClusterName
      TaskDefinition: !Ref TaskDefinition
      LaunchType: FARGATE
      ServiceName: !Sub "${Prefix}-svc"
      SchedulingStrategy: REPLICA
      DesiredCount: 1
      AvailabilityZoneRebalancing: ENABLED
      LoadBalancers:
        - ContainerName: !Sub "${Prefix}-container"
          ContainerPort: !Ref ContainerPort
          LoadBalancerName: !Ref AWS::NoValue
          TargetGroupArn: !Ref TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups: 
            - !Ref ECSServiceSecurityGroup
          Subnets: !Split [",", !FindInMap [EnvironmentConfig, !Ref Environment, SubnetIDs]]
      PlatformVersion: LATEST
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DeploymentController:
        Type: ECS
      ServiceConnectConfiguration:
        Enabled: false
      Tags: []
      EnableECSManagedTags: true
    DependsOn:
      - Listener
      - TargetGroup
      - TaskDefinition
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${Prefix}-task-def"
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !FindInMap [EnvironmentConfig, !Ref Environment, ExecutionRoleArn]
      TaskRoleArn: !FindInMap [EnvironmentConfig, !Ref Environment, TaskRoleArn]
      ContainerDefinitions:
        - Name: !Sub "${Prefix}-container"
          Image: !FindInMap [EnvironmentConfig, !Ref Environment, ImageArn]
          Essential: true
          PortMappings:
            - ContainerPort: !Ref ContainerPort
          Secrets:
            - Name: GENERIC_SECRET
              ValueFrom: !FindInMap [EnvironmentConfig, !Ref Environment, GenericSecretArn]
            - Name: SNOWFLAKE_SECRET
              ValueFrom: !FindInMap [EnvironmentConfig, !Ref Environment, SnowflakeSecretArn]
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Name: !Sub "${Prefix}-alb"
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Subnets: !Split [",", !FindInMap [EnvironmentConfig, !Ref Environment, SubnetIDs]]
    DependsOn:
      - TargetGroup
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "${Prefix}-tg"
      Port: !Ref ContainerPort
      Protocol: HTTP
      VpcId: !FindInMap [EnvironmentConfig, !Ref Environment, VpcID]
      HealthCheckProtocol: HTTP
      HealthCheckPort: !Ref ContainerPort
      HealthCheckPath: /healthcheck
      Matcher:
        HttpCode: 200
      TargetType: ip
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: '443'
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !FindInMap [EnvironmentConfig, !Ref Environment, CertificateArn]
    DependsOn:
      - LoadBalancer
Outputs:
  ClusterName:
    Description: The cluster used to create the service.
    Value: !Ref ECSClusterName
  ECSService:
    Description: The created service.
    Value: !Ref ECSService
  LoadBalancer:
    Description: The created load balancer.
    Value: !Ref LoadBalancer
  Listener:
    Description: The created listener.
    Value: !Ref Listener
  TargetGroup:
    Description: The created target group.
    Value: !Ref TargetGroup